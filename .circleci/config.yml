# Continuous Integration to a WP Engine install
# PHP CircleCI 2.1 configuration file

# Requirements:
# 1. In CircleCI settings, add environment variables for your site's installs:
#     * WPE_PRODUCTION_INSTALL=thenameofyourproductioninstall
#     * WPE_STAGING_INSTALL=thenameofyourstaginginstall
#     * WPE_DEVELOPMENT_INSTALL=thenameofyourdevelopmentinstall

version: 2.1

commands:
    install:
        description:          Installs our code and all dependencies
        parameters:
            no-dev:
                description:  Should composer skip dev requirements?
                type:         boolean
                default:      true
            cache-name:
                description:  Specific cache name for different executors
                type:         string
                default:      base
        steps:
            - checkout
            - run: sudo apt-get update
            - run: sudo apt-get install -y rsync
            - restore_cache:
                keys:
                    - v1-<< parameters.cache-name >>-dependencies-{{ checksum "composer.json" }}-{{ checksum "package.json" }}
                    - v1-<< parameters.cache-name >>-dependencies-
            - run:
                name:         Install Composer Dependencies
                command:      composer install <<# parameters.no-dev >>--no-dev<</ parameters.no-dev >> --no-ansi --no-interaction --optimize-autoloader --no-progress --prefer-dist
            - run:
                name:         Install Node Dependencies
                command:      npm install
            - save_cache:
                paths:
                    - ./wp-content/vendor
                    - ./node_modules
                key:          v1-<< parameters.cache-name >>-dependencies-{{ checksum "composer.json" }}-{{ checksum "package.json" }}
executors:
    base:
        docker:
            - image:          circleci/php:7.2-apache-node-browsers

jobs:
    build_deploy:
        description:          Build and deploy our code
        parameters:
            wpe-env:
                description:  Are we deploying to the production, staging, or development environment?
                type:         string
                default:      staging
            minify:
                description:  Whether to minify assets or not.
                type:         boolean
                default:      false
        executor:             base
        steps:
            # Install our files and dependencies
            - install

            - run: echo "wpe-env is << parameters.wpe-env >>"

            # Run the build job for css & js. Conditional jobs based on the environments being deployed to
            - when:
                condition: << parameters.minify >>
                steps:
                    - run:
                        name:         Build minified files
                        command:      npm run prod
            - unless:
                condition: << parameters.minify >>
                steps:
                    - run:
                        name:         Build unminified files
                        command:      npm run build

            # ssh key that is added to both WP Engine environments (public key) and CircleCI settings (private key)
            - add_ssh_keys:
                fingerprints:
                    - "ce:ed:bd:f5:c6:b0:31:62:24:6b:30:22:24:31:03:98"

            # Add the git.wpengine.com fingerprint to our known hosts
            # We need to interact with this server. And the unknown host will trigger an interactive prompt.
            # The workaround is to manually add the fingerprint ourselves.
            # Note:           This will need updated if and when WP Engine updates the fingerprint
            - run:
                name:         Add deploy host to known_hosts
                command:      echo 'git.wpengine.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEApRVAUwjz49VKfuENfyv52Dvh3qx9nWW/3Gb7R9pwABXUNQqkipt3aB7w2W6jOaEGFmzSr/4qhstUv0lvbeZu/1uRU/b6WrqULu+9bAdt9ll09QULfMxAIFWDwDS1F6GEZT+Yau/wLUI2VTZppxSVRIPe20/mxgXk8/Q9ha5tCaz+dQZ9lHWwk9rbDF+7LSVomLGM3e9dwr6mS4p37Qkje2cFJBqQcQ+RqEOTOD/xiFU0DH8TWO4R5yibQ0KEZVACkwhaAZSl81F7YZrrLEfsFS/llgpV3YZHQGvFi0x/ELAUJMFE9umdy9EwFF7/lTpV8zOGdiLW+v8svweWJJJ00w==' >> ~/.ssh/known_hosts

            # Set up our WPE_Install based on the environment
            - run:
                name:         Set up the WPE Install name
                command:      |
                              echo 'export WPE_INSTALL=$( \
                                  case << parameters.wpe-env >> in \
                                      production) echo $WPE_PRODUCTION_INSTALL;; \
                                      staging) echo $WPE_STAGING_INSTALL;; \
                                      development) echo $WPE_DEVELOPMENT_INSTALL;; \
                                  esac )' >> $BASH_ENV
                              source $BASH_ENV

            # Set up the git remotes for WP Engine
            - run:
                name:         Set up the WP Engine install git remotes
                command:      |
                              git config --global user.email "crowdfavorite@gmail.com"
                              git config --global user.name "Crowd Favorite"
                              git remote add wpe git@git.wpengine.com:production/${WPE_INSTALL}.git
                              git fetch wpe

            # 1. Clone the WPE repo to the wpengine directory.
            # 2. Remove all visible files and directories under the wpengine directory to make room for the latest changes.
            # 3. Copy all files and directories, except for the excluded ones, to the wpengine directory.
            # 4. Remove the .gitignore file from the wpengine directory and replace it with the one that's used for deploys.
            # 5. Remove all files that should no longer be tracked from the index and add the remaining ones.
            # 6. Commit the changes and push them to the WPE remote.
            - deploy:
                name:         Commit build files and push to WPE remote
                command:      |
                              git clone --depth 1 git@git.wpengine.com:production/${WPE_INSTALL}.git wpengine
                              rm -rf ./wpengine/*
                              rsync -av --exclude-from=.circleci/rsync_excludes . wpengine/
                              unlink wpengine/.gitignore
                              cp .gitignores/__deployment wpengine/.gitignore
                              cd wpengine
                              git rm -r --cached --ignore-unmatch .
                              git add -A
                              git diff-index --quiet HEAD || git commit -m "Deployment commit #${CIRCLE_BUILD_NUM}." && git push

workflows:
    version: 2

    build_test_deploy:
        jobs:
            - build_deploy:
                minify:       false
                name:         deploy-development
                wpe-env:      development
                filters:
                    branches:
                        only: development
            - build_deploy:
                minify:       true
                name:         deploy-staging
                wpe-env:      staging
                filters:
                    branches:
                        only: staging
            - build_deploy:
                name:         deploy-production
                wpe-env:      production
                minify:       true
                filters:
                    branches:
                        only: primary
